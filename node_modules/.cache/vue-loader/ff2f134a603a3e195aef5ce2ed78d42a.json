{"remainingRequest":"/Users/mac/Desktop/vue_demo1.1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Desktop/vue_demo1.1/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/mac/Desktop/vue_demo1.1/src/App.vue","mtime":1555310092803},{"path":"/Users/mac/Desktop/vue_demo1.1/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/mac/Desktop/vue_demo1.1/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mac/Desktop/vue_demo1.1/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mac/Desktop/vue_demo1.1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/vue_demo1.1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <header class=\"header\">\n        <h1>todos</h1>\n        <input class=\"new-todo\" autofocus autocomplete=\"off\" placeholder=\"What needs to be done?\">\n    </header>\n    <section class=\"main\">\n        <input id=\"toggle-all\" class=\"toggle-all\" type=\"checkbox\" v-model=\"allDone\">\n        <label for=\"toggle-all\">Mark all as complete</label>\n        <ul class=\"todo-list\">\n            <li :class=\"['todo',{completed: todo.completed === true}, {editing: editTodo === todo}]\" v-for=\"(todo,index) in showTodo\" :key=\"index\">\n            <div class=\"view\">\n              <input class=\"toggle\" type=\"checkbox\" v-model=\"todo.completed\">\n              <label @dblclick=\"editingMode(todo)\">{{todo.title}}</label>\n              <button class=\"destroy\" @click=\"removeTodo(todo)\"></button>\n            </div>\n            <div>test</div>\n            <input class=\"edit\" type=\"text\" \n              v-todo-focus=\"editTodo === todo\" \n              v-model=\"todo.title\"\n              @blur=\"doneEdit(todo)\" \n              @keyup.enter=\"doneEdit(todo)\" \n              @keyup.esc=\"cancelEdit(todo)\"\n              >\n          </li>\n        </ul>\n    </section>\n    <footer class=\"footer\">\n        <span class=\"todo-count\">\n            <strong>3</strong> todo\n        </span>\n        <ul class=\"filters\">\n            <li><a href=\"#/all\" class=\"selected\">All</a></li>\n            <li><a href=\"#/active\">Active</a></li>\n            <li><a href=\"#/completed\">Completed</a></li>\n        </ul>\n        <button class=\"clear-completed\">Clear completed</button>\n    </footer>\n    <footer class=\"info\">\n        <p>Double-click to edit a todo</p>\n        <p>Written by <a href=\"http://evanyou.me\">Evan You</a></p>\n        <p>Part of <a href=\"http://todomvc.com\">TodoMVC</a></p>\n    </footer>\n  </div>\n</template>\n\n<script>\n    import '@/assets/base.css'\n    import '@/assets/index.css'\n\nexport default {\n   data(){\n    return{\n      filter: 'all',\n      beforeEditCache:null,\n      editTodo:null,\n      todos:[{\n        title: '代办一',\n        completed: true,\n      },{\n        title: '代办二',\n        completed: false,\n      }],\n    }\n  },\n  methods:{\n     changeFilter: function(filter) {\n      this.filter = filter\n    },\n    editingMode(todo) {\n      this.beforeEditCache = todo.title;\n      this.editTodo = todo;\n      console.log(this.editTodo)\n    },\n    doneEdit: function (todo) {\n      if (!this.editTodo) {\n        return;\n      }\n      this.editTodo = null;\n      this.beforeEditCache = null;\n      todo.title = todo.title.trim();\n      if (!todo.title) {\n        this.removeTodo(todo);\n      }\n    },\n    cancelEdit: function (todo) {\n      this.editTodo = null;\n      todo.title = this.beforeEditCache;\n      this.beforeEditCache = null;\n    },\n  },\n  computed:{\n    showTodo: function() {\n      let filter = this.filter;\n      let showTodo = this.todos.filter( data => {\n        if(filter === 'all'){\n          return data\n        }else if( filter === 'active'){\n          return !data.completed\n        }else if( filter === 'completed'){\n          return data.completed\n        }\n      })\n      return showTodo\n    },\n    allDone: {\n        get: function () {\n          return this.todos.every(data => data.completed);\n        },\n        set: function (value) {\n          this.todos.forEach(function (todo) {\n            todo.completed = value;\n          });\n        }\n      }\n  },\n  components: {\n    \n  },\n  directives: {\n    'todo-focus': function (el, binding) {\n      if (binding.value) {\n        el.focus();\n      }\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]}]}