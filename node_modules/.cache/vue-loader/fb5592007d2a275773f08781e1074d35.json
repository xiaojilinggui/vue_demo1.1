{"remainingRequest":"/Users/mac/Desktop/vue_demo1.1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Desktop/vue_demo1.1/src/components/TodoList.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/mac/Desktop/vue_demo1.1/src/components/TodoList.vue","mtime":1555322177717},{"path":"/Users/mac/Desktop/vue_demo1.1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/vue_demo1.1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default{\n    props:{\n        todos:Array\n    },\n    data(){\n        return{\n            beforeEditCache:null,\n             editTodo:null,\n             \n        }\n    },\n    computed:{\n        showTodo: function() {\n        let filter = this.filter;\n        let showTodo = this.todos.filter( data => {\n            if(filter === 'all'){\n            return data\n            }else if( filter === 'active'){\n            return !data.completed\n            }else if( filter === 'completed'){\n            return data.completed\n            }\n        })\n        return showTodo\n        },\n        allDone: {\n            get: function () {\n            return this.todos.every(data => data.completed);\n            },\n            set: function (value) {\n            this.todos.forEach(function (todo) {\n                todo.completed = value;\n            });\n            }\n    },\n    methods:{\n        editingMode(todo) {\n            this.beforeEditCache = todo.title;\n            this.editTodo = todo;\n            \n        },\n    }\n}\n",{"version":3,"sources":["TodoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"TodoList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n     <section class=\"main\">\n        <input id=\"toggle-all\" class=\"toggle-all\" type=\"checkbox\" v-model=\"allDone\">\n        <label for=\"toggle-all\">Mark all as complete</label>\n        <ul class=\"todo-list\">\n            <li :class=\"['todo',{completed: todo.completed === true}, {editing: editTodo === todo}]\" v-for=\"(todo,index) in showTodo\" :key=\"index\">\n            <div class=\"view\">\n              <input class=\"toggle\" type=\"checkbox\" v-model=\"todo.completed\">\n              <label @dblclick=\"editingMode(todo)\">{{todo.title}}</label>\n              <button class=\"destroy\" @click=\"removeTodo(todo)\"></button>\n            </div>\n            <input class=\"edit\" type=\"text\" \n              v-todo-focus=\"editTodo === todo\" \n              v-model=\"todo.title\"\n              @blur=\"doneEdit(todo)\" \n              @keyup.enter=\"doneEdit(todo)\" \n              @keyup.esc=\"cancelEdit(todo)\"\n              >\n          </li>\n        </ul>\n    </section>\n</template>\n\n<script lang=\"ts\">\nexport default{\n    props:{\n        todos:Array\n    },\n    data(){\n        return{\n            beforeEditCache:null,\n             editTodo:null,\n             \n        }\n    },\n    computed:{\n        showTodo: function() {\n        let filter = this.filter;\n        let showTodo = this.todos.filter( data => {\n            if(filter === 'all'){\n            return data\n            }else if( filter === 'active'){\n            return !data.completed\n            }else if( filter === 'completed'){\n            return data.completed\n            }\n        })\n        return showTodo\n        },\n        allDone: {\n            get: function () {\n            return this.todos.every(data => data.completed);\n            },\n            set: function (value) {\n            this.todos.forEach(function (todo) {\n                todo.completed = value;\n            });\n            }\n    },\n    methods:{\n        editingMode(todo) {\n            this.beforeEditCache = todo.title;\n            this.editTodo = todo;\n            \n        },\n    }\n}\n</script>"]}]}